with "config";
with "json_ada";

library project Orka is

   for Languages use ("ada");

   for Library_Name use "orka";
   for Library_Version use "liborka.so." & Config.Version;
   for Library_Dir use "lib";
   for Library_ALI_Dir use "lib/orka";
   for Library_Kind use Config.Library_Kind;

   OpenGL_Sources := ("src/gl/interface",
                      "src/gl/implementation");

   Orka_Sources := ("src/orka/interface",
                    "src/orka/implementation",
                    "src/orka/interface/x86/generic",
                    "src/orka/implementation/x86/generic");

   case Config.Windowing_System is
      when "windows" => OpenGL_Sources := OpenGL_Sources & "src/gl/windows" & "src/orka/windows";
      when "x11"     => OpenGL_Sources := OpenGL_Sources & "src/gl/x11" & "src/orka/linux";
      when "egl"     => OpenGL_Sources := OpenGL_Sources & "src/gl/egl" & "src/orka/linux";
   end case;

   case Config.Mode is
      when "release" => OpenGL_Sources :=
        OpenGL_Sources & "src/gl/implementation/no_auto_exceptions";
      when others => OpenGL_Sources :=
        OpenGL_Sources & "src/gl/implementation/auto_exceptions";
   end case;

   case Config.Compiler_Name is
      when "gnat" => Orka_Sources :=
        Orka_Sources & ("src/orka/interface/x86/gnat");
      when others =>
        null;
   end case;

   for Source_Dirs use OpenGL_Sources & Orka_Sources;
   for Object_Dir use "obj/orka";

   package Ide renames Config.Ide;
   package Compiler renames Config.Compiler;
   package Binder renames Config.Binder;
   package Builder renames Config.Builder;

   package Linker is
      case Config.Windowing_System is
         when "windows" =>
            for Linker_Options use ("-lopengl32");
         when "x11" =>
            for Linker_Options use ("-lGL", "-lX11");
         when "egl" =>
            for Linker_Options use ("-lEGL");
      end case;
   end Linker;

end Orka;
