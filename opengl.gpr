with "config";

library project OpenGL is

   for Languages use ("ada");

   for Library_Name use "openglada";
   for Library_Version use "libopenglada.so." & Config.Version;
   for Library_Dir  use "lib";
   for Library_ALI_Dir use "lib/opengl";
   for Library_Kind use Config.Library_Kind;

   OpenGL_Sources := ("src/gl/interface",
                      "src/gl/implementation");

   case Config.Windowing_System is
      when "windows" => OpenGL_Sources := OpenGL_Sources & "src/gl/windows";
      when "x11"     => OpenGL_Sources := OpenGL_Sources & "src/gl/x11";
      when "quartz"  => OpenGL_Sources := OpenGL_Sources & "src/gl/mac";
   end case;

   case Config.Mode is
      when "release" => OpenGL_Sources :=
        OpenGL_Sources & "src/gl/implementation/no_auto_exceptions";
      when others => OpenGL_Sources :=
        OpenGL_Sources & "src/gl/implementation/auto_exceptions";
   end case;

   for Source_Dirs use OpenGL_Sources;
   for Object_Dir use "obj/opengl";

   package Ide renames Config.Ide;
   package Compiler renames Config.Compiler;
   package Binder renames Config.Binder;

   package Linker is
      case Config.Windowing_System is
         when "windows" =>
            for Linker_Options use ("-lOpenGL32", "-lGdi32");
         when "x11" =>
            for Linker_Options use ("-lGL", "-lX11");
         when "quartz" =>
            for Linker_Options use ("-Wl,-framework,OpenGL,-framework,CoreFoundation");
      end case;
   end Linker;

end OpenGL;
